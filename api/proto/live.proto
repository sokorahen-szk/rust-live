syntax = "proto3";
package api;

option go_package = "./";

import "api/proto/common.proto";

service LiveService {
    rpc ListLiveVideos (ListLiveVideosRequest) returns (ListLiveVideosResponse);
    rpc ListArchiveVideos (ListArchiveVideosRequest) returns (ListArchiveVideosResponse);
}

enum VideoPlatform {
    VIDEO_PLATFORM_UNKNOWN = 0;
    TWITCH = 1;
    YOUTUBE = 2;
}

enum VideoStatus {
    VIDEO_STATUS_UNKNOWN = 0;
    STREAMING = 1;
    ENDED = 2;
}

message ListLiveVideosRequest {
    string search_keywords = 1;                 // 検索キーワード(タイトル/配信者の検索可)
    repeated VideoPlatform video_platforms = 2; // 配信プラットフォーム
    Sort sort = 3;                              // ソートキー(デフォルト: 0)
    int32 page = 4;                             // 現在ページ
    int32 limit = 5;                            // 取得する件数(デフォルト: 10)

    enum Sort {
        SORT_UNKNOWN = 0;                       // ソートキー未設定
        SORT_VIEWER_ASC = 1;                    // 視聴者数が少ない順に並べる
        SORT_VIEWER_DESC = 2;                   // 視聴者数が多い順に並べる
        SORT_STARTED_DATETIME_ASC = 3;          // 配信開始日時が新しい順に並べる
        SORT_STARTED_DATETIME_DESC = 4;         // 配信開始日時が古い順に並べる
    }
}

message ListLiveVideosResponse {
    repeated LiveVideo liveVideos = 1;          // 配信動画リスト
    Pagination pagination = 2;                  // ページネーション
}

message ListArchiveVideosRequest {
    string search_keywords = 1;                 // 検索キーワード(タイトル/配信者の検索可)
    repeated VideoPlatform video_platforms = 2; // 配信プラットフォーム
    repeated VideoStatus video_statuses = 3;    // 配信動画ステータス
    Sort sort = 4;                              // ソートキー(デフォルト: 0)
    int32 page = 5;                             // 現在ページ
    int32 limit = 6;                            // 取得する件数(デフォルト: 10)

    enum Sort {
        SORT_UNKNOWN = 0;                       // ソートキー未設定
        SORT_STARTED_DATETIME_ASC = 1;          // 配信開始日時が新しい順に並べる
        SORT_STARTED_DATETIME_DESC = 2;         // 配信開始日時が古い順に並べる
    }
}

message ListArchiveVideosResponse {
    repeated ArchiveVideo archiveVideos = 1;    // 配信動画リスト
    Pagination pagination = 2;                  // ページネーション
}

message LiveVideo {
    int32 id = 1;                               // 配信動画ID
    string broadcastId = 2;                     // ライブ配信ID
    string title = 3;                           // 配信動画名
    string url = 4;                             // 配信URL
    string stremer = 5;                         // 配信者
    int32 viewer = 6;                           // 視聴者
    VideoPlatform video_platform = 7;           // 配信プラットフォーム
    string thumbnail_image = 8;                 // 配信動画サムネイル
    string started_datetime = 9;                // 配信開始日時(RFC3339)
    int32 elapsed_times = 10;                   // システム時刻と配信日時の差分を秒単位で返す.
    string elapsed_times_text = 11;             // システム時刻と配信日時の差分をテキスト表記で返す.
}

message ArchiveVideo {
    int32 id = 1;                               // 配信動画ID
    string broadcastId = 2;                     // ライブ配信ID
    string title = 3;                           // 配信動画名
    string url = 4;                             // 配信アーカイブURL
    string thumbnail_image = 5;                 // 配信動画サムネイル
    string stremer = 6;                         // 配信者
    VideoPlatform video_platform = 7;           // 配信プラットフォーム
    VideoStatus video_status = 8;               // 配信動画ステータス
    string started_datetime = 9;                // 配信開始日時(RFC3339)
    string ended_datetime = 10;                 // 配信終了日時(RFC3339)
}
